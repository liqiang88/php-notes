<?php
$loader = new ClassLoader();

call_user_func(Foo::getInitializer($loader));    //call_user_func执行闭包函数

var_dump($loader->getA());

class Foo{

    public static $a = [2,3,4,5];

    public static $b = [5,6,7,8];

    public static $c = [12,13,14,15];

    public static $d = [22,23,24,25];

    public static function getInitializer(ClassLoader $loader){
        /**
         * @link http://php.net/manual/zh/closure.bind.php
         * Closure::bind 复制一个闭包，绑定指定的$this对象和类作用域
         */
        return \Closure::bind(function () use ($loader) {
            $loader->a = Foo::$a;
            $loader->b = Foo::$b;
            $loader->c = Foo::$c;
            $loader->d = Foo::$d;
        }, null, ClassLoader::class);
    }
}

class ClassLoader{

    public $a = array();

    public $b = array();

    public $c = array();

    public $d = array();

    public function getA(){
        return $this->a;
    }

    //....

}
